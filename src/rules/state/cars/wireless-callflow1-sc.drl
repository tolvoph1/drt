package com.nortel.ema.swisscom.bal.state.cars

/*
	@(#) $Id: wireless-callflow1-sc.drl 156 2013-12-10 08:00:59Z tolvoph1 $
	$Author: tolvoph1 $
	
	Wireless Callflow 1 With Selfcare
	
*/

import com.nortel.ema.swisscom.bal.vo.model.CustomerProfile;
import com.nortel.ema.swisscom.bal.vo.model.CallProfile;
import com.nortel.ema.swisscom.bal.vo.model.CallDetail;
import com.nortel.ema.swisscom.bal.vo.model.ServiceConfigurationMap;
import com.nortel.ema.swisscom.bal.rules.model.StateEngineRulesResult;
import com.nortel.ema.swisscom.bal.rules.model.facts.CARSRulesBean;
import com.nortel.ema.swisscom.bal.rules.model.facts.R5RulesBean;
import java.util.Set;
import java.util.Date;


/* ****************************************************************************************
   Start of the rules
   ****************************************************************************************/
rule "001_Init_CARSRulesBean"
	no-loop
	salience 20000
	when
		not (CARSRulesBean(  ))
	then
		assert ( new CARSRulesBean(), true );
end

rule "002_Init_carsStatus"
	no-loop
	salience 10000
	when
	  StateEngineRulesResult(state != StateEngineRulesResult.DONE )	
	  crb: CARSRulesBean( state != CARSRulesBean.STATUS_VALUES )
	  customerProfile: CustomerProfile()
	then
	  crb.initialize(customerProfile.getCarsStatus());
	  crb.setState(CARSRulesBean.STATUS_VALUES);
end

rule "003_Init_CustomerOver18"
	no-loop
	salience 9000
	when
	  StateEngineRulesResult(state != StateEngineRulesResult.DONE )	
	  crb: CARSRulesBean( state == CARSRulesBean.STATUS_VALUES )
	  serviceConfiguration: ServiceConfigurationMap()
	  customerProfile: CustomerProfile()
	  eval (
	  		customerProfile.getAge() != null &&
	  		serviceConfiguration.get("cars.wless.ov.limit.age") != null &&
			new Integer((String)customerProfile.getAge()).intValue() >= new Integer((String)serviceConfiguration.get("cars.wless.ov.limit.age")).intValue()
		   )
	then
	  crb.setCustomerOver18("true");
end

/* ------------------------------------------------------------------------------ */

rule "010_112201_Init_Workflow"
	no-loop
	when
		CallProfile ( nextState == "Init" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112201");
		serr.setNextState("GetInvoices");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "020_GetInvoices"
	no-loop
	when
		CallProfile ( nextState == "GetInvoices" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("GETINVOICES");		
		serr.setOutputVar1("obo");
		serr.setNextState("CheckResultGetInvoices");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "030a_112202_CheckResultGetInvoices_ERROR"
	no-loop
	when
		CallProfile ( nextState == "CheckResultGetInvoices", carsActionResponse == "ERROR" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112202");
		serr.setNextState("RoutingToDunningBlocked");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "030b_CheckResultGetInvoices_SUCCESS"
	no-loop
	when
		CallProfile ( nextState == "CheckResultGetInvoices", carsActionResponse == "SUCCESS" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");		
		serr.setOutputVar1("portal:InfoNatelGesperrtSelfcareWireless");
		serr.setOutputVar2("true");
		serr.setOutputVar3("false");
		serr.setNextState("AddStatistic112203");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040_112203_AddStatistic"
	no-loop
	when
		CallProfile ( nextState == "AddStatistic112203" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112203");
		serr.setNextState("CheckInvoiceAmount");
		serr.setState(StateEngineRulesResult.DONE);
		
end

rule "050a_111205_CheckInvoiceAmount_HaveOpenInvoice_true"
	no-loop
	when
		CallProfile ( nextState == "CheckInvoiceAmount", openInvoiceAmount == "true" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112205");
		serr.setNextState("SpeakInvoices");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "050b_112204_CheckInvoiceAmount_HaveOpenInvoice_false"
	no-loop
	when
		CallProfile ( nextState == "CheckInvoiceAmount", openInvoiceAmount == "false" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112204");
		serr.setNextState("SpeakAllInvoicesPaid");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "060a_SpeakInvoices"
	no-loop
	when
		CallProfile ( nextState == "SpeakInvoices" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");		
		serr.setOutputVar1("invoices:");
		serr.setOutputVar2("true");
		serr.setOutputVar3("false");
		serr.setNextState("SetSendSMSFlagTrueAfterInvoices");   
		serr.setState(StateEngineRulesResult.DONE);
end

rule "060b_SpeakAllInvoicesPaid"
	no-loop
	when
		CallProfile ( nextState == "SpeakAllInvoicesPaid" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");		
		serr.setOutputVar1("portal:FaelligeRechnungenBeglichen");
		serr.setOutputVar2("false");
		serr.setOutputVar3("false");
		serr.setNextState("CreditLimitOverviewB"); 
		serr.setState(StateEngineRulesResult.DONE);
end

rule "065_SetSendSMSFlag_true"
	no-loop
	when
		CallProfile ( nextState == "SetSendSMSFlagTrueAfterInvoices" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SMSAFTERHANGUP");		
		serr.setOutputVar1("true");
		serr.setNextState("CheckRecentPayment");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "070a_CheckRecentPayment_HaveRecentPayment_true"
	no-loop
	when
		CallProfile ( nextState == "CheckRecentPayment", haveRecentPayment == "true" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");		
		serr.setOutputVar1("recentPayment:LetzteZahlungA,LetzteZahlungB");
		serr.setOutputVar2("false");
		serr.setOutputVar3("false");
		serr.setNextState("AddStatistic112206");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "070b_CheckRecentPayment_HaveRecentPayment_false"
	no-loop
	when
		CallProfile ( nextState == "CheckRecentPayment", haveRecentPayment != "true" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");		
		serr.setOutputVar1("portal:NochKeineZahlung");
		serr.setOutputVar2("false");
		serr.setOutputVar3("false");
		serr.setNextState("AddStatistic112206");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "080_112206_AddStatistic"
	no-loop
	when
		CallProfile ( nextState == "AddStatistic112206" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112206");
		serr.setNextState("SpeakPaymentPromiseInfo");
		serr.setState(StateEngineRulesResult.DONE);
		
end

rule "090_SpeakPaymentPromiseInfo"
	no-loop
	when
		CallProfile ( nextState == "SpeakPaymentPromiseInfo" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");		
		serr.setOutputVar1("portal:ZusicherungZahlungSelfcareWireless");
		serr.setOutputVar2("true");
		serr.setOutputVar3("false");
		serr.setNextState("AddStatistic112301");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "100_112301_AddStatistic"
	no-loop
	when
		CallProfile ( nextState == "AddStatistic112301" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112301");
		serr.setNextState("AskForPaymentPromise");
		serr.setState(StateEngineRulesResult.DONE);
		
end

rule "110_AskForPaymentPromise"
	no-loop
	when
		CallProfile ( nextState == "AskForPaymentPromise"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("INPUT");	
		serr.setOutputVar1("AnschlussEntsperrenTaste1InfoWiederholenTaste2");
		serr.setOutputVar2("5s");
		serr.setOutputVar3("2");
		serr.setNextState("CheckInputAskForPaymentPromise");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "120a_112302_CheckInputAskForPaymentPromise_Input_1"
	no-loop
	when
		CallProfile ( nextState == "CheckInputAskForPaymentPromise",
					  carsActionResponse == "SUCCESS",
					  carsActionResponseValue == "1"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112302");
		serr.setNextState("SendPaymentPromise");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "120b_112303_CheckInputAskForPaymentPromise_Input_2"
	no-loop
	when
		CallProfile ( nextState == "CheckInputAskForPaymentPromise",
					  carsActionResponse == "SUCCESS",
					  carsActionResponseValue == "2"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112303");
		serr.setNextState("SpeakPaymentPromiseInfo");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "120c_112304_CheckInputAskForPaymentPromise_NoInput"
	no-loop
	when
		CallProfile ( nextState == "CheckInputAskForPaymentPromise",
					  carsActionResponse == "NOINPUT" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112304");
		serr.setNextState("RepeatAskForPaymentPromiseIntro");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "120d_112304_CheckInputAskForPaymentPromise_NoMatch"
	no-loop
	when
		CallProfile ( nextState == "CheckInputAskForPaymentPromise",
					  carsActionResponse == "NOMATCH" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112304");
		serr.setNextState("RepeatAskForPaymentPromiseIntro");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "130_RepeatAskForPaymentPromiseIntro"
	no-loop
	when
		CallProfile ( nextState == "RepeatAskForPaymentPromiseIntro" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");		
		serr.setOutputVar1("portal:BitteOptionWaehlen");
		serr.setOutputVar2("true");
		serr.setOutputVar3("false");
		serr.setNextState("AddStatistic112305");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "140_112305_AddStatistic"
	no-loop
	when
		CallProfile ( nextState == "AddStatistic112305" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112305");
		serr.setNextState("RepeatAskForPaymentPromise");
		serr.setState(StateEngineRulesResult.DONE);
		
end

rule "150_RepeatAskForPaymentPromise"
	no-loop
	when
		CallProfile ( nextState == "RepeatAskForPaymentPromise"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("INPUT");	
		serr.setOutputVar1("AnschlussEntsperrenTaste1InfoWiederholenTaste2 VerbindenMitarbeiterTaste3");
		serr.setOutputVar2("5s");
		serr.setOutputVar3("3");
		serr.setNextState("CheckInputRepeatAskForPaymentPromise");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "160a_112306_CheckInputRepeatAskForPaymentPromise_Input_1"
	no-loop
	when
		CallProfile ( nextState == "CheckInputRepeatAskForPaymentPromise",
					  carsActionResponse == "SUCCESS",
					  carsActionResponseValue == "1"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112306");
		serr.setNextState("SendPaymentPromise");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "160b_112307_CheckInputRepeatAskForPaymentPromise_Input_2"
	no-loop
	when
		CallProfile ( nextState == "CheckInputRepeatAskForPaymentPromise",
					  carsActionResponse == "SUCCESS",
					  carsActionResponseValue == "2"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112307");
		serr.setNextState("SpeakPaymentPromiseInfo");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "160c_112309_CheckInputRepeatAskForPaymentPromise_Input_3"
	no-loop
	when
		CallProfile ( nextState == "CheckInputRepeatAskForPaymentPromise",
					  carsActionResponse == "SUCCESS",
					  carsActionResponseValue == "3"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112309");
		serr.setNextState("SendInvoiceSMSThenRoutingToDunningBlocked");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "160d_112308_CheckInputRepeatAskForPaymentPromise_NoInput"
	no-loop
	when
		CallProfile ( nextState == "CheckInputRepeatAskForPaymentPromise",
					  carsActionResponse == "NOINPUT" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112308");
		serr.setNextState("NoInputDetectedAfter112308");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "160e_112308_CheckInputRepeatAskForPaymentPromise_NoMatch"
	no-loop
	when
		CallProfile ( nextState == "CheckInputRepeatAskForPaymentPromise",
					  carsActionResponse == "NOMATCH" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112308");
		serr.setNextState("NoInputDetectedAfter112308");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "170_NoInputDetectedAfter112308"
	no-loop
	when
		CallProfile ( nextState == "NoInputDetectedAfter112308" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");		
		serr.setOutputVar1("portal:keineEingabe");
		serr.setOutputVar2("false");
		serr.setOutputVar3("false");
		serr.setNextState("AddStatistic112305AfterNINM");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "175_112305_AddStatisticAfterNINM"
	no-loop
	when
		CallProfile ( nextState == "AddStatistic112305AfterNINM" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112305");
		serr.setNextState("RepeatAskForPaymentPromiseAfterNINM");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "180_RepeatAskForPaymentPromiseAfterNINM"
	no-loop
	when
		CallProfile ( nextState == "RepeatAskForPaymentPromiseAfterNINM"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("INPUT");	
		serr.setOutputVar1("AnschlussEntsperrenTaste1InfoWiederholenTaste2 VerbindenMitarbeiterTaste3");
		serr.setOutputVar2("5s");
		serr.setOutputVar3("3");
		serr.setNextState("CheckInputRepeatAskForPaymentPromiseAfterNINM");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "190a_112306_CheckInputRepeatAskForPaymentPromiseAfterNINM_Input_1"
	no-loop
	when
		CallProfile ( nextState == "CheckInputRepeatAskForPaymentPromiseAfterNINM",
					  carsActionResponse == "SUCCESS",
					  carsActionResponseValue == "1"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112306");
		serr.setNextState("SendPaymentPromise");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "190b_112307_CheckInputRepeatAskForPaymentPromiseAfterNINM_Input_2"
	no-loop
	when
		CallProfile ( nextState == "CheckInputRepeatAskForPaymentPromiseAfterNINM",
					  carsActionResponse == "SUCCESS",
					  carsActionResponseValue == "2"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112307");
		serr.setNextState("SpeakPaymentPromiseInfo");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "190c_112309_CheckInputRepeatAskForPaymentPromiseAfterNINM_Input_3"
	no-loop
	when
		CallProfile ( nextState == "CheckInputRepeatAskForPaymentPromiseAfterNINM",
					  carsActionResponse == "SUCCESS",
					  carsActionResponseValue == "3"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112309");
		serr.setNextState("SendInvoiceSMSThenRoutingToDunningBlocked");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "190d_112309_CheckInputRepeatAskForPaymentPromiseAfterNINM_NoInput"
	no-loop
	when
		CallProfile ( nextState == "CheckInputRepeatAskForPaymentPromiseAfterNINM",
					  carsActionResponse == "NOINPUT" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112309");
		serr.setNextState("SendInvoiceSMSThenRoutingToDunningBlocked");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "190e_112309_CheckInputRepeatAskForPaymentPromiseAfterNINM_NoMatch"
	no-loop
	when
		CallProfile ( nextState == "CheckInputRepeatAskForPaymentPromiseAfterNINM",
					  carsActionResponse == "NOMATCH" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112309");
		serr.setNextState("SendInvoiceSMSThenRoutingToDunningBlocked");
		serr.setState(StateEngineRulesResult.DONE);
end

//200 Payment Promise
rule "200_SendPaymentPromise"
	no-loop
	when
		CallProfile ( nextState == "SendPaymentPromise" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PAYMENTPROMISE");		
		serr.setOutputVar1("obo");
		serr.setNextState("CheckResultSendPaymentPromise");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "210a_CheckResultSendPaymentPromise_SUCCESS"
	no-loop
	when
		CallProfile ( nextState == "CheckResultSendPaymentPromise",
					  carsActionResponse == "SUCCESS" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");		
		serr.setOutputVar1("portal:DankeZusicherungZahlungSelfcareWireless");
		serr.setOutputVar2("true");
		serr.setOutputVar3("false");
		serr.setNextState("AddStatistic112311");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "210b_112310_CheckResultSendPaymentPromise_ERROR"
	no-loop
	when
		CallProfile ( nextState == "CheckResultSendPaymentPromise",
					  carsActionResponse == "ERROR" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112310");
		serr.setNextState("SpeakErrorPaymentPromise");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "220_SpeakErrorPaymentPromise"
	no-loop
	when
		CallProfile ( nextState == "SpeakErrorPaymentPromise" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");		
		serr.setOutputVar1("portal:AuftragNichtAusgefuehrtMitarbeiterVerbinden");
		serr.setOutputVar2("false");
		serr.setOutputVar3("false");
		serr.setNextState("SetPlayTransferPromptFalseThenRouting2DunningBlocked");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "225_SetPlayTransferPromptFalseThenRouting2DunningBlocked"
	no-loop
	when
		CallProfile ( nextState == "SetPlayTransferPromptFalseThenRouting2DunningBlocked" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("TRANSFERPROMPTSWITCH");		
		serr.setOutputVar1("false");
		serr.setNextState("SendInvoiceSMSThenRoutingToDunningBlocked");
		serr.setState(StateEngineRulesResult.DONE);
end


rule "230_112311_AddStatistic"
	no-loop
	when
		CallProfile ( nextState == "AddStatistic112311" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112311");
		serr.setNextState("CreditLimitOverviewA");
		serr.setState(StateEngineRulesResult.DONE);
		
end


// CreditLimitOverview A and B

rule "300_A_ID01a_WF7_active"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.7") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.7").equals("true")
			 )
	then
		serr.setAction("RUNCALLFLOW");
		serr.setOutputVar1("cars/wireless-callflow7");		
		serr.setOutputVar2("112114|112118");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID01i_WF7_inactive"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.7") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.7").equals("false")
			 )
	then
		serr.setAction("BACK2PORTAL");
		serr.setOutputVar2("112114|112118");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID02a_WF5_active"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("true")
			 )
	then
		serr.setAction("RUNCALLFLOW");
		serr.setOutputVar1("cars/wireless-callflow5");		
		serr.setOutputVar2("112114|112119|112120|112122");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID02i_WF5_inactive"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("false")
			 )
	then
		serr.setAction("BACK2PORTAL");
		serr.setOutputVar2("112114|112119|112120|112122");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID03a_WF5_active"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == false,
						creditLimitRecentPP == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("true")
			 )
	then
		serr.setAction("RUNCALLFLOW");
		serr.setOutputVar1("cars/wireless-callflow5");		
		serr.setOutputVar2("112114|112119|112120|112123|112124");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID03i_WF5_inactive"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == false,
						creditLimitRecentPP == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("false")
			 )
	then
		serr.setAction("BACK2PORTAL");
		serr.setOutputVar2("112114|112119|112120|112123|112124");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID04a_WF6_active"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == false,
						creditLimitRecentPP == false )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.6") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.6").equals("true")
			 )
	then
		serr.setAction("RUNCALLFLOW");
		serr.setOutputVar1("cars/wireless-callflow6");		
		serr.setOutputVar2("112114|112119|112120|112123|112125");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID04i_WF6_inactive"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == false,
						creditLimitRecentPP == false )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.6") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.6").equals("false")
			 )
	then
		serr.setAction("BACK2PORTAL");
		serr.setOutputVar2("112114|112119|112120|112123|112125");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID05a_WF5_active"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == false )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("true")
			 )
	then
		serr.setAction("RUNCALLFLOW");
		serr.setOutputVar1("cars/wireless-callflow5");		
		serr.setOutputVar2("112114|112119|112121");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID05i_WF5_inactive"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == false )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("false")
			 )
	then
		serr.setAction("BACK2PORTAL");
		serr.setOutputVar2("112114|112119|112121");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID06_112115_AddStatistic"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == false )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112115");
		serr.setNextState("ExitPointA");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID07a_WF7_active"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.7") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.7").equals("true")
			 )
	then
		serr.setAction("RUNCALLFLOW");
		serr.setOutputVar1("cars/wireless-callflow7");		
		serr.setOutputVar2("112116|112118");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID07i_WF7_inactive"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.7") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.7").equals("false")
			 )
	then
		serr.setAction("BACK2PORTAL");
		serr.setOutputVar2("112116|112118");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID08a_WF5_active"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("true")
			 )
	then
		serr.setAction("RUNCALLFLOW");
		serr.setOutputVar1("cars/wireless-callflow5");		
		serr.setOutputVar2("112116|112119|112120|112122");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID08i_WF5_inactive"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("false")
			 )
	then
		serr.setAction("BACK2PORTAL");
		serr.setOutputVar2("112116|112119|112120|112122");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID09a_WF5_active"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == false,
						creditLimitRecentPP == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("true")
			 )
	then
		serr.setAction("RUNCALLFLOW");
		serr.setOutputVar1("cars/wireless-callflow5");		
		serr.setOutputVar2("112116|112119|112120|112123|112124");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID09i_WF5_inactive"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == false,
						creditLimitRecentPP == true )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("false")
			 )
	then
		serr.setAction("BACK2PORTAL");
		serr.setOutputVar2("112116|112119|112120|112123|112124");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID10a_WF6_active"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == false,
						creditLimitRecentPP == false )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.6") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.6").equals("true")
			 )
	then
		serr.setAction("RUNCALLFLOW");
		serr.setOutputVar1("cars/wireless-callflow6");		
		serr.setOutputVar2("112116|112119|112120|112123|112125");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID10i_WF6_inactive"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == true,
						creditLimitOverValue == false,
						creditLimitRecentPP == false )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.6") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.6").equals("false")
			 )
	then
		serr.setAction("BACK2PORTAL");
		serr.setOutputVar2("112116|112119|112120|112123|112125");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID11a_WF5_active"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == false )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("true")
			 )
	then
		serr.setAction("RUNCALLFLOW");
		serr.setOutputVar1("cars/wireless-callflow5");		
		serr.setOutputVar2("112116|112119|112121");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID11i_WF5_inactive"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == true, 
						debarringPending == false,
						customerOver18 == false )
		serviceConfiguration: ServiceConfigurationMap()		
		eval (
				serviceConfiguration.get("cars.wless.active.callflow.5") != null &&
				serviceConfiguration.get("cars.wless.active.callflow.5").equals("false")
			 )
	then
		serr.setAction("BACK2PORTAL");
		serr.setOutputVar2("112116|112119|112121");		
		serr.setNextState("DONE");
		serr.setState(StateEngineRulesResult.DONE);
end  

rule "300_A_ID12_112117_AddStatistic"
	no-loop
	when
	    CallProfile ( nextState == "CreditLimitOverviewB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
		CARSRulesBean ( creditLimitBlock  == false )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112117");
		serr.setNextState("ExitPointB");
		serr.setState(StateEngineRulesResult.DONE);
end  


/* The following rules serves as a single exit point from the above logic and creates the link to the next state which might be
   different from callflow to callflow */
rule "310a_ExitPointA"
	no-loop
	when
	    CallProfile ( nextState == "ExitPointA" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
	then
		serr.setAction("PROCEED");		
		serr.setNextState("FurtherQuestions");
		serr.setState(StateEngineRulesResult.DONE);
end 

rule "310b_ExitPointB"
	no-loop
	when
	    CallProfile ( nextState == "ExitPointB" )
		serr : StateEngineRulesResult(state != StateEngineRulesResult.DONE )
	then
		serr.setAction("PROCEED");		
		serr.setNextState("FurtherQuestions");
		serr.setState(StateEngineRulesResult.DONE);
end 

// Further Questions Callflow after Exitpoint A and B
rule "700_FurtherQuestions"
	no-loop
	when
		CallProfile ( nextState == "FurtherQuestions"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("INPUT");	
		serr.setOutputVar1("HinweisNatelEntsperrungFrageRechnungAndereFragen");
		serr.setOutputVar2("5s");
		serr.setOutputVar3("2");
		serr.setNextState("CheckInputFurtherQuestions");
		serr.setState(StateEngineRulesResult.DONE);
end

// Further Questions Callflow after C
rule "710a_112312_CheckResultFurtherQuestions_Input_1"
	no-loop
	when
		CallProfile ( nextState == "CheckInputFurtherQuestions",
					  carsActionResponse == "SUCCESS",
					  carsActionResponseValue == "1"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112312");
		serr.setNextState("SendInvoiceSMSThenRoutingToDunningBlocked");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "710b_112415_CheckResultFurtherQuestions_Input_2"
	no-loop
	when
		CallProfile ( nextState == "CheckInputFurtherQuestions",
					  carsActionResponse == "SUCCESS",
					  carsActionResponseValue == "2"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112415");
		serr.setNextState("SendInvoiceSMSThenBack2Portal");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "710c_112313_CheckResultFurtherQuestions_NoInput"
	no-loop
	when
		CallProfile ( nextState == "CheckInputFurtherQuestions",
					  carsActionResponse == "NOINPUT" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112313");
		serr.setNextState("RepeatFurtherQuestionsExtraPrompt");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "710d_112313_CheckResultFurtherQuestions_NoMatch"
	no-loop
	when
		CallProfile ( nextState == "CheckInputFurtherQuestions",
					  carsActionResponse == "NOMATCH" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112313");
		serr.setNextState("RepeatFurtherQuestionsExtraPrompt");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "720_RepeatFurtherQuestionsExtraPrompt"
	no-loop
	when
		CallProfile ( nextState == "RepeatFurtherQuestionsExtraPrompt"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("INPUT");	
		serr.setOutputVar1("HinweisNatelEntsperrungFrageRechnungAndereFragen KeineWeiterenInformationenAuflegen");
		serr.setOutputVar2("5s");
		serr.setOutputVar3("2");
		serr.setNextState("CheckInputFurtherQuestionsAfterNoInput");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "730a_112416_CheckResultFurtherQuestionsAfterNoInput_Input_2"
	no-loop
	when
		CallProfile ( nextState == "CheckInputFurtherQuestionsAfterNoInput",
					  carsActionResponse == "SUCCESS",
					  carsActionResponseValue == "2"  )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112416");
		serr.setNextState("SendInvoiceSMSThenBack2Portal");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "730b_112314_CheckResultFurtherQuestionsAfterNoInput_AnyInput"
	no-loop
	salience -100
	when
		CallProfile ( nextState == "CheckInputFurtherQuestionsAfterNoInput" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ADDSTATISTIC");		
		serr.setOutputVar1("112314");
		serr.setNextState("SendInvoiceSMSThenRoutingToDunningBlocked");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "820_SendInvoiceSMSThenRoutingToDunningBlocked"
	no-loop
	when
		CallProfile ( nextState == "SendInvoiceSMSThenRoutingToDunningBlocked")
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SENDINVOICESMS");		
		serr.setOutputVar1("true");
		serr.setNextState("RoutingToDunningBlocked");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "821_RoutingToDunningBlocked"
	no-loop
	when
		CallProfile ( nextState == "RoutingToDunningBlocked")
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("TRANSFER");		
		serr.setOutputVar1(R5RulesBean.CARSTARGET_DUNNING_BLOCKED);
		serr.setNextState("Disconnect");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "829_SendInvoiceSMSThenBack2Portal"
	no-loop
	when
		CallProfile ( nextState == "SendInvoiceSMSThenBack2Portal")
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SENDINVOICESMS");		
		serr.setOutputVar1("true");
		serr.setNextState("Back2Portal");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "830_Back2Portal"
	no-loop
	when
		CallProfile ( nextState == "Back2Portal")
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("BACK2PORTAL");		
		serr.setNextState("Disconnect");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "900_SendInvoiceSMSAfterHangup"
	no-loop
	when
		CallProfile ( carsActionResponse == "HANGUP" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SENDINVOICESMS");		
		serr.setOutputVar1("true");
		serr.setNextState("Disconnect");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "998_FALLBACK_TRANSFER"
	no-loop
	salience -10000
	when
		CallProfile ( nextState != "Disconnect" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("TRANSFER");
		serr.setOutputVar1(R5RulesBean.CARSTARGET_DUNNING_BLOCKED);
		serr.setNextState("Disconnect");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "999_FALLBACK_DISCONNECT"
	no-loop
	salience -20000
	when
		CallProfile ( nextState == "Disconnect" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("DISCONNECT");
		serr.setNextState("ThisShouldNeverHappen");
		serr.setState(StateEngineRulesResult.DONE);
end