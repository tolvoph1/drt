package com.nortel.ema.swisscom.bal.state

/*
	@(#) $Id: vp5res-0800656000-state.drl 118 2013-09-26 13:45:02Z tolvoph1 $
	$Author: tolvoph1 $

	Repair hotline OneIVR RES flow.
	
	Changes are made in the MASTER-repair configuration and copied to BN flows for
	0800 65 60 00
	062 207 65 60

*/

import com.nortel.ema.swisscom.bal.vo.model.CustomerProfile;
import com.nortel.ema.swisscom.bal.vo.model.CustomerProducts;
import com.nortel.ema.swisscom.bal.vo.model.CallProfile;
import com.nortel.ema.swisscom.bal.vo.model.CallDetail;
import com.nortel.ema.swisscom.bal.vo.model.ServiceConfigurationMap;
import com.nortel.ema.swisscom.bal.rules.model.StateEngineRulesResult;
import com.nortel.ema.swisscom.bal.rules.model.facts.R5RulesBean;
import java.util.Set;
import java.util.Date;

/*
	Initialize Rules Bean and check for String values in passed
	parameters. Put those in "constants" attributes of the bean
*/
rule "001_Init_R5RulesBean"
	no-loop
	salience 20000
	when
		not (R5RulesBean(  ))
	then
		assert ( new R5RulesBean(), true );
end

/* ****************************************************************************************
   Start of the rules
   ****************************************************************************************/

/* 
 First state "SETPNFROMSESSION" - execute getMiniCustomer if ANI defined, play jingle based on outputVar1
 */

rule "010a_Init_NoAniJingle"
	no-loop
	salience -100
	when
		(
			CallProfile ( nextState == "Init", ani == "" ) || 
			CallProfile ( nextState == "Init", ani == "0" ) || 
			CallProfile ( nextState == "Init", ani == null )    
		)
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");	
		serr.setOutputVar1("jingle");
		serr.setNextState("Welcome");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "010b_Init_GotAniSetPNFromSession"
	no-loop
	salience -1000
	when
		CallProfile ( nextState == "Init" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SETPNFROMSESSION");		
		serr.setOutputVar1("true");
		serr.setNextState("AutoLangSelect");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "020a_AutoLangSelect_SetCustomerLang"
	no-loop
	salience -100
	when
		callProfile: CallProfile ( nextState == "AutoLangSelect" )
		customerProfile: CustomerProfile( segment == R5RulesBean.SEGMENT_RES )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
		eval (
			callProfile.getLanguage() != null && 
			customerProfile.getLanguageSpoken() != null &&
			callProfile.getLanguage().equals(customerProfile.getLanguageSpoken())
		)
	then
		serr.setAction("SETLANG");		
		serr.setOutputVar1(customerProfile.getLanguageSpoken());
		serr.setNextState("Welcome");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "020b_AutoLangSelect_SetMultilingual"
	no-loop
	salience -1000
	when
		CallProfile ( nextState == "AutoLangSelect" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SETLANG");	
		serr.setOutputVar1("ml");		
		serr.setNextState("Welcome");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "030_Welcome_OpeningHours"
	no-loop
	when
		CallProfile ( nextState == "Welcome" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("CHECKOH");
		serr.setOutputVar1("OH_RES_WELCOME");
		serr.setNextState("WelcomeActual");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040a1_WelcomeActual_SingleLanguage_PlayWelcomeTrue_Morning"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage != "false", playwelc != "false", resultOH == "morning" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-morning");
		serr.setNextState("Info");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040a2_WelcomeActual_SingleLanguage_PlayWelcomeTrue_Day"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage != "false", playwelc != "false", resultOH == "day" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-day");
		serr.setNextState("Info");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040a3_WelcomeActual_SingleLanguage_PlayWelcomeTrue_Evening"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage != "false", playwelc != "false", resultOH == "evening" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-evening");
		serr.setNextState("Info");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040a4_WelcomeActual_SingleLanguage_PlayWelcomeTrue_Default"
	no-loop
	salience -1
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage != "false", playwelc != "false" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-general");
		serr.setNextState("Info");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040b_WelcomeActual_SingleLanguage_PlayWelcomeFalse"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage != "false", playwelc == "false" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Info");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040c1_WelcomeActual_MultiLanguage_PlayWelcomeTrue_Morning"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage == "false", playwelc != "false", resultOH == "morning" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-morning-Multilingual");
		serr.setNextState("LanguageSelection");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040c2_WelcomeActual_MultiLanguage_PlayWelcomeTrue_Day"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage == "false", playwelc != "false", resultOH == "day" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-day-Multilingual");
		serr.setNextState("LanguageSelection");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040c3_WelcomeActual_MultiLanguage_PlayWelcomeTrue_Evening"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage == "false", playwelc != "false", resultOH == "evening" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-evening-Multilingual");
		serr.setNextState("LanguageSelection");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040c4_WelcomeActual_MultiLanguage_PlayWelcomeTrue_Default"
	no-loop
	salience -1
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage == "false", playwelc != "false" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-general-Multilingual");
		serr.setNextState("LanguageSelection");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040d_WelcomeActual_MultiLanguage_PlayWelcomeFalse"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage == "false", playwelc == "false" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("LanguageSelection");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "050_LangSelect"
	no-loop
	when
		CallProfile ( nextState == "LanguageSelection" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("LANGSELECT");
		serr.setNextState("CheckLangSelectResponse");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "060a_CheckLangSelectResponse_Continue"
	no-loop
	when
		CallProfile ( nextState == "CheckLangSelectResponse", actionResponse == "DONE" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("OpeningHoursGlobal");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "060b_CheckLangSelectResponse_Transfer"
	no-loop
	when
		CallProfile ( nextState == "CheckLangSelectResponse", actionResponse != "DONE" ) // actionResponse == InputError
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

/*
  Global Opening Hours check
*/
rule "070_OpeningHoursGlobal_Repair"
	no-loop
	when
		CallProfile ( nextState == "OpeningHoursGlobal" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("CHECKOH");
		serr.setOutputVar1("OH_RES_Repair");
		serr.setNextState("CheckOHGlobalResult");
		serr.setState(StateEngineRulesResult.DONE);
end

/*
  Check Result of opening hours check
*/
rule "080a_CheckOHGlobalResult_Closed"
	no-loop
	when
		CallProfile ( nextState == "CheckOHGlobalResult", resultOH != "100" ) 
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("closed-bye-repair");
		serr.setNextState("Disconnect");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "080b_CheckOHGlobalResult_Open"
	no-loop
	when
		CallProfile ( nextState == "CheckOHGlobalResult", resultOH == "100" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("CustomerIdentification");
		serr.setState(StateEngineRulesResult.DONE);
end

/*
  Customer Identification / PhoneNumber Input
*/
rule "090a_CustID_GotAniMobile"
	no-loop
	salience -100
	when
		CallProfile ( nextState == "CustomerIdentification", connectionType == R5RulesBean.WIRELESS )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Info"); 
		serr.setState(StateEngineRulesResult.DONE);
end

rule "090b_CustID_NoAniOrNotMobile"
	no-loop
	salience -1000
	when
		CallProfile ( nextState == "CustomerIdentification" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("ENTERPN");
		serr.setNextState("CheckEnteredPhoneNumber"); 
		serr.setState(StateEngineRulesResult.DONE);
end

/* Check Result of ENTERPN */
rule "100a_CheckEnteredPhoneNumber_FailedOrCancelled"
	no-loop
	when
		CallProfile ( nextState == "CheckEnteredPhoneNumber", actionResponse != "DONE" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "100b_CheckEnteredPhoneNumber_Ok"
	no-loop
	when
		CallProfile ( nextState == "CheckEnteredPhoneNumber", actionResponse == "DONE" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("GETRESULTCUSTINFO");
		serr.setNextState("Info");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "110_Info_Free"
	no-loop
	when
		CallProfile ( nextState == "Info")
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("info-free-stay-on-the-line");
		serr.setNextState("EmergencyAnnouncements");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "120_EmergencyAnnouncements_Set"
	no-loop
	when
		CallProfile ( nextState == "EmergencyAnnouncements" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SETINASACTIONS");
		serr.setOutputVar1("RES");
		serr.setNextState("PlayEmergencyAnnouncements"); 
		serr.setState(StateEngineRulesResult.DONE);
end

rule "130_EmergencyAnnouncements_Play"
	no-loop
	when
		CallProfile ( nextState == "PlayEmergencyAnnouncements" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("EXECINASACTIONS");
		serr.setOutputVar1("MAIN");
		serr.setNextState("PersonalisationOpenHours"); 
		serr.setState(StateEngineRulesResult.DONE);
end

rule "140_PersonalisationOpenHours"
	no-loop
	when
		CallProfile ( nextState == "PersonalisationOpenHours" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("CHECKOH");
		serr.setOutputVar1("OH_RES_Repair");
		serr.setNextState("CheckOHPersonalisationResult"); 
		serr.setState(StateEngineRulesResult.DONE);
end

rule "150a_CheckOHPersonalisationResult_Open"
	no-loop
	when
		CallProfile ( nextState == "CheckOHPersonalisationResult", resultOH == "100" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("CHECKOH");
		serr.setOutputVar1("OH_RES_CBR");
		serr.setNextState("CheckOHCBRResult");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "150b_CheckOHPersonalisationResult_NotOpen"
	no-loop
	when
		CallProfile ( nextState == "CheckOHPersonalisationResult", resultOH != "100" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("closed-bye-repair");
		serr.setNextState("Disconnect"); 
		serr.setState(StateEngineRulesResult.DONE);
end

/* Personalisation */
rule "160a_CheckOHCBRResult_Open"
	no-loop
	when
		CallProfile ( nextState == "CheckOHCBRResult", resultOH != "closed" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("CBR");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "160b_CheckOHCBRResult_Closed"
	no-loop
	when
		callProfile: CallProfile ( nextState == "CheckOHCBRResult", resultOH == "closed" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "170_Transfer"
	no-loop
	when
		CallProfile ( nextState == "Transfer" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("TRANSFER");
		serr.setOutputVar1("oneIVR/vp5resTransfer");
		serr.setNextState("Disconnect");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "200_Disconnect"
	no-loop
	when
		CallProfile ( nextState == "Disconnect" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("DISCONNECT");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "201_GoodbyeDisconnect"
	no-loop
	when
		CallProfile ( nextState == "GoodbyeDisconnect" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("GOODBYE");
		serr.setState(StateEngineRulesResult.DONE);
end

/* State for Exceptions caught by StateEngine Event Handlers */
rule "900_InputError"
	no-loop
	salience -500
	when
		CallProfile ( nextState == "InputError" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "901_ConnectorError"
	no-loop
	salience -500
	when
		CallProfile ( nextState == "ConnectorError" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
	serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "902_TechError"
	no-loop
	salience -500
	when
		CallProfile ( nextState == "TechError" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
	serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

/* Catch-All States */

rule "998_FALLBACK_TRANSFER"
	no-loop
	salience -10000
	when
		CallProfile ( nextState != "Disconnect" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "999_FALLBACK_DISCONNECT"
	no-loop
	salience -20000
	when
		CallProfile ( nextState == "Disconnect" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("DISCONNECT");
		serr.setNextState("ThisShouldNeverHappen");
		serr.setState(StateEngineRulesResult.DONE);
end