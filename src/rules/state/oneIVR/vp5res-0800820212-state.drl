package com.nortel.ema.swisscom.bal.state

/*
	@(#) $Id: vp5res-0800820212-state.drl 118 2013-09-26 13:45:02Z tolvoph1 $
	$Author: tolvoph1 $
	
	OneIVR RES flow for 0800 820 212
	Festnetzapparate Support
	
*/

import com.nortel.ema.swisscom.bal.vo.model.CustomerProfile;
import com.nortel.ema.swisscom.bal.vo.model.CustomerProducts;
import com.nortel.ema.swisscom.bal.vo.model.CallProfile;
import com.nortel.ema.swisscom.bal.vo.model.CallDetail;
import com.nortel.ema.swisscom.bal.vo.model.ServiceConfigurationMap;
import com.nortel.ema.swisscom.bal.rules.model.StateEngineRulesResult;
import com.nortel.ema.swisscom.bal.rules.model.facts.R5RulesBean;
import java.util.Set;
import java.util.Date;

/*
	Initialize Rules Bean and check for String values in passed
	parameters. Put those in "constants" attributes of the bean
*/
rule "001_Init_R5RulesBean"
	no-loop
	salience 20000
	when
		not (R5RulesBean(  ))
	then
		assert ( new R5RulesBean(), true );
end

/*
	Rules to populate the beans used for easier reading, writing and changing of the rules
*/

/*
	AgeBasedRouting, populate the bean attributes realted to customer age
*/
rule "005_PopulateAgeDetails"
	no-loop
	salience 10000
	when
	  customerProfile: CustomerProfile ( segment == R5RulesBean.SEGMENT_RES )
	  serviceconfig: ServiceConfigurationMap()
	  eval (
			customerProfile.getAge() != null &&
			serviceconfig.get("vp.res.caller.MaxAge") != null &&
			serviceconfig.get("vp.res.caller.BestAgeStart") != null
		)
		r5b: R5RulesBean()
	then
		r5b.setCustomerAge(customerProfile.getAge());
		r5b.setMaxAge((String)serviceconfig.get("vp.res.caller.MaxAge"));
		r5b.setBestAge((String)serviceconfig.get("vp.res.caller.BestAgeStart"));
end

/* ****************************************************************************************
   Start of the rules
   ****************************************************************************************/

/* 
 First state:
 - Init with ANI -> SetPNFromSession
 - Init without ANI -> play jingle
 */
rule "010a_Init_NoAniPlayJingle"
	no-loop
	when
		(
			CallProfile ( nextState == "Init", ani == "" ) || 
			CallProfile ( nextState == "Init", ani == "0" ) || 
			CallProfile ( nextState == "Init", ani == null )    
		)
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");		
		serr.setOutputVar1("jingle");
		serr.setNextState("Welcome");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "010b_Init_GotAniSetPNFromSession"
	no-loop
	salience -1
	when
		CallProfile ( nextState == "Init" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SETPNFROMSESSION");		
		serr.setOutputVar1("true");
		serr.setNextState("AutoLangSelect");
		serr.setState(StateEngineRulesResult.DONE);
end

/* Automitic language selection based on customer info */
rule "020a_AutoLangSelect_SetCustomerLangRES"
	no-loop
	when
		callProfile: CallProfile ( nextState == "AutoLangSelect", singleLanguage == "true", international != "true" )
		customerProfile: CustomerProfile( segment == R5RulesBean.SEGMENT_RES )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
		eval (
			callProfile.getLanguage() != null && 
			customerProfile.getLanguageSpoken() != null &&
			callProfile.getLanguage().equals(customerProfile.getLanguageSpoken())
		)
	then
		serr.setAction("SETLANG");		
		serr.setOutputVar1(customerProfile.getLanguageSpoken());
		serr.setNextState("Welcome");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "020b_AutoLangSelect_SetMultilingual"
	no-loop
	salience -1
	when
		CallProfile ( nextState == "AutoLangSelect" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SETLANG");	
		serr.setOutputVar1("ml");	
		serr.setNextState("Welcome");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "030_Welcome_OpeningHours"
	no-loop
	when
		CallProfile ( nextState == "Welcome" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("CHECKOH");
		serr.setOutputVar1("OH_RES_WELCOME");
		serr.setNextState("WelcomeActual");
		serr.setState(StateEngineRulesResult.DONE);
end

/* Welcome prompt */
rule "040a1_WelcomeActual_SingleLanguage_PlayWelcomeTrue_Morning"
	no-loop
	when
		callProfile: CallProfile ( nextState == "WelcomeActual", singleLanguage != "false", playwelc != "false", resultOH == "morning" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-morning");
		serr.setNextState("SetINASActions");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040a2_WelcomeActual_SingleLanguage_PlayWelcomeTrue_Day"
	no-loop
	when
		callProfile: CallProfile ( nextState == "WelcomeActual", singleLanguage != "false", playwelc != "false", resultOH == "day" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-day");
		serr.setNextState("SetINASActions");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040a3_WelcomeActual_SingleLanguage_PlayWelcomeTrue_Evening"
	no-loop
	when
		callProfile: CallProfile ( nextState == "WelcomeActual", singleLanguage != "false", playwelc != "false", resultOH == "evening" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-evening");
		serr.setNextState("SetINASActions");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040a4_WelcomeActual_SingleLanguage_PlayWelcomeTrue_Default"
	no-loop
	salience -1
	when
		callProfile: CallProfile ( nextState == "WelcomeActual", singleLanguage != "false", playwelc != "false" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-general");
		serr.setNextState("SetINASActions");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040b_WelcomeActual_SingleLanguage_PlayWelcomeFalse"
	no-loop
	when
		callProfile: CallProfile ( nextState == "WelcomeActual", singleLanguage != "false", playwelc == "false" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("SetINASActions");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040c1_WelcomeActual_MultiLanguage_PlayWelcomeTrue_Morning"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage == "false", playwelc != "false", resultOH == "morning" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-morning-Multilingual");
		serr.setNextState("LanguageSelection");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040c2_WelcomeActual_MultiLanguage_PlayWelcomeTrue_Day"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage == "false", playwelc != "false", resultOH == "day" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-day-Multilingual");
		serr.setNextState("LanguageSelection");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040c3_WelcomeActual_MultiLanguage_PlayWelcomeTrue_Evening"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage == "false", playwelc != "false", resultOH == "evening" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-evening-Multilingual");
		serr.setNextState("LanguageSelection");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040c4_WelcomeActual_MultiLanguage_PlayWelcomeTrue_Default"
	no-loop
	salience -1
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage == "false", playwelc != "false" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SPEAK");
		serr.setOutputVar1("welcome-general-Multilingual");
		serr.setNextState("LanguageSelection");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "040d_WelcomeActual_MultiLanguage_PlayWelcomeFalse"
	no-loop
	when
		CallProfile ( nextState == "WelcomeActual", singleLanguage == "false", playwelc == "false" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("LanguageSelection");
		serr.setState(StateEngineRulesResult.DONE);
end

/* Language Selection */
rule "050_LangSelect"
	no-loop
	when
		CallProfile ( nextState == "LanguageSelection" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("LANGSELECT");
		serr.setNextState("CheckLangSelectResponse");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "06a_CheckLangSelectResponse_Continue"
	no-loop
	when
		CallProfile ( nextState == "CheckLangSelectResponse", actionResponse == "DONE" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("SetINASActions");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "060b_CheckLangSelectResponse_Transfer"
	no-loop
	when
		CallProfile ( nextState == "CheckLangSelectResponse", actionResponse != "DONE" ) // actionResponse == InputError
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "070_SetINASActions"
	no-loop
	when
		CallProfile ( nextState == "SetINASActions" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("SETINASACTIONS");
		serr.setOutputVar1("RES 0800 820 212");
		serr.setNextState("PlayINAS"); 
		serr.setState(StateEngineRulesResult.DONE);
end

rule "080_PlayINAS"
	no-loop
	when
		CallProfile ( nextState == "PlayINAS" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("EXECINASACTIONS");
		serr.setOutputVar1("MAIN");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "190_Transfer"
	no-loop
	when
		CallProfile ( nextState == "Transfer" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("TRANSFER");
		serr.setOutputVar1("oneIVR/vp5resTransfer");
		serr.setNextState("Disconnect");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "200_Disconnect"
	no-loop
	when
		CallProfile ( nextState == "Disconnect" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("DISCONNECT");
		serr.setState(StateEngineRulesResult.DONE);
end

/* State for Exceptions caught by StateEngine Event Handlers */
rule "900_InputError"
	no-loop
	when
		CallProfile ( nextState == "InputError" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "901_ConnectorError"
	no-loop
	when
		CallProfile ( nextState == "ConnectorError" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

rule "902_TechError"
	no-loop
	when
		CallProfile ( nextState == "TechError" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end

/* Catch-All States */
rule "998_FALLBACK_TRANSFER"
	no-loop
	salience -10000
	when
		CallProfile ( nextState != "Disconnect" )
		serr : StateEngineRulesResult(state == StateEngineRulesResult.NOT_SET )
	then
		serr.setAction("PROCEED");
		serr.setNextState("Transfer");
		serr.setState(StateEngineRulesResult.DONE);
end
