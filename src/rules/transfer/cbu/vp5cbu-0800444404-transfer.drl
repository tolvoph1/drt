package com.nortel.ema.swisscom.bal.rules.cbu

/*
	@(#) $Id: vp5cbu-0800444404-transfer.drl 227 2014-03-31 07:31:26Z tolvoph1 $
	$Author: tolvoph1 $
*/

import com.nortel.ema.swisscom.bal.vo.model.CustomerProfile;
import com.nortel.ema.swisscom.bal.vo.model.CustomerProducts;
import com.nortel.ema.swisscom.bal.vo.model.CallProfile;
import com.nortel.ema.swisscom.bal.vo.model.CallDetail;
import com.nortel.ema.swisscom.bal.rules.model.TransferRulesState;
import com.nortel.ema.swisscom.bal.rules.model.facts.R5RulesBean;
import java.util.Set;
import java.util.Date;

global Set queueNames;

/*
	Initialize Rules Bean and check for String values in passed
	parameters. Put those in "constants" attributes of the bean
*/
rule "Init"
	no-loop
	salience 20000
	when
		not (R5RulesBean(  ))
	then
		assert ( new R5RulesBean(), true );
end

/*
	Rules to set the customer segment according to the Customer Profile
*/ 
rule "CustomerSegment FeinSegment SubSegment"
	no-loop
	salience 10000
	when
		cpHandle: CustomerProfile ( )
		handle: R5RulesBean( )
	then
		handle.setSegment(cpHandle.getSegment());
		handle.setFineSegment(cpHandle.getFineSegment());
		handle.setSubSegment(cpHandle.getSubSegment());
end

rule "ID0891"
	no-loop
	salience 0
  	activation-group "QU"
	when
		handle: R5RulesBean( segment != R5RulesBean.SEGMENT_CBU, segment != R5RulesBean.SEGMENT_RES)  
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("40891");
		transferRulesState.setQualificationResult("7573");
end

rule "ID0997"
	no-loop
	salience 200
  	activation-group "QU"
	when
		handle: R5RulesBean( segment != R5RulesBean.SEGMENT_SME, segment != R5RulesBean.SEGMENT_RES)  
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
		( callProfile: CallProfile ( salestype == "Sales Assistant 1", orgunit == "ENT-CS-CSD-CSK-5" ))
	then
		transferRulesState.setIdentificationResult("40997");
		transferRulesState.setQualificationResult("7000");
end

rule "ID0999"
	no-loop
	salience 200
  	activation-group "QU"
	when
		handle: R5RulesBean( segment != R5RulesBean.SEGMENT_SME, segment != R5RulesBean.SEGMENT_RES)  
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
		( callProfile: CallProfile ( salestype == "Sales Assistant 1", orgunit == "ENT-CS-CSD-CSK-3" ))
	then
		transferRulesState.setIdentificationResult("40999");
		transferRulesState.setQualificationResult("7001");
end

rule "ID1000"
	no-loop
	salience 200
  	activation-group "QU"
	when
		handle: R5RulesBean( segment != R5RulesBean.SEGMENT_SME, segment != R5RulesBean.SEGMENT_RES)  
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
		( callProfile: CallProfile ( salestype == "Sales Assistant 1", orgunit == "ENT-CS-CSD-CSK-6" ))
	then
		transferRulesState.setIdentificationResult("41000");
		transferRulesState.setQualificationResult("7002");
end

rule "ID1001"
	no-loop
	salience 200
  	activation-group "QU"
	when
		handle: R5RulesBean( segment != R5RulesBean.SEGMENT_SME, segment != R5RulesBean.SEGMENT_RES)  
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
		( callProfile: CallProfile ( salestype == "Sales Assistant 1", orgunit == "ENT-CS-CSD-CSK-1" ))
	then
		transferRulesState.setIdentificationResult("41001");
		transferRulesState.setQualificationResult("7003");
end


/*
 	ID 1025: CBU Portal, Fallback rule, Routing ID 7175
*/
rule "ID1025_FALLBACK"
	no-loop
	salience -1000
  	activation-group "QU"
	when
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("41025");
		transferRulesState.setQualificationResult("7175");
end

rule "ID1053"
	no-loop
	salience 0
  	activation-group "QU"
	when
		R5RulesBean( segment != R5RulesBean.SEGMENT_SME )
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("41053");
		transferRulesState.setQualificationResult("7557");
end


/*
  Assign the qualificationResult to the queueNames set
*/ 

rule "SET_RETURN_QUEUENAME"
  salience -10000
  when
    trs: TransferRulesState( qualificationResult != TransferRulesState.NOT_SET )
  then
    queueNames.add(trs.getQualificationResult());
end