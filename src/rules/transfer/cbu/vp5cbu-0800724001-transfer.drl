package com.nortel.ema.swisscom.bal.rules.cbu

/*
	@(#) $Id: vp5cbu-0800724001-transfer.drl 5 2013-08-05 10:00:45Z tolvoph1 $
	$Author: tolvoph1 $
*/

import com.nortel.ema.swisscom.bal.vo.model.CustomerProfile;
import com.nortel.ema.swisscom.bal.vo.model.CustomerProducts;
import com.nortel.ema.swisscom.bal.vo.model.CustomerProductClusters;
import com.nortel.ema.swisscom.bal.vo.model.CallProfile;
import com.nortel.ema.swisscom.bal.vo.model.CallDetail;
import com.nortel.ema.swisscom.bal.rules.model.TransferRulesState;
import com.nortel.ema.swisscom.bal.rules.model.facts.R5RulesBean;
import java.util.Set;
import java.util.Date;

global Set queueNames;

/*
	Initialize Rules Bean and check for String values in passed
	parameters. Put those in "constants" attributes of the bean
*/
rule "Init"
	no-loop
	salience 20000
	when
		not (R5RulesBean(  ))
	then
		assert ( new R5RulesBean(), true );
end

/*
	Rules to set the customer segment according to the Customer Profile
*/ 
rule "CustomerSegment FeinSegment SubSegment"
	no-loop
	salience 10000
	when
		cpHandle: CustomerProfile ( )
		handle: R5RulesBean( )
	then
		handle.setSegment(cpHandle.getSegment());
		handle.setFineSegment(cpHandle.getFineSegment());
		handle.setSubSegment(cpHandle.getSubSegment());
end

// Rules to set the selection in the menus
rule "MenuLevel1Selected"
	no-loop
	salience 10000
	when
		callprofile: CallProfile ( )
		handle: R5RulesBean( menuLevel1Selected == R5RulesBean.EMPTY )			
	then
		handle.setMenuLevel1Selected((String)callprofile.get("cbu/vp5cbu-0800724001-menu-level1"));
end
rule "MenuLevel2Selected"
	no-loop
	salience 10000
	when
		callprofile: CallProfile ( )
		handle: R5RulesBean( menuLevel2Selected == R5RulesBean.EMPTY )			
	then
		handle.setMenuLevel2Selected((String)callprofile.get("cbu/vp5cbu-0800724001-menu-level2"));
end

rule "ID0807"
	no-loop
	salience 100
  	activation-group "QU"
	when
		( handle: R5RulesBean( menuLevel1Selected == "SA_OUS", menuLevel2Selected == "VOICE_AXA" )) 
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("40807");
		transferRulesState.setQualificationResult("7300");
end

rule "ID0808"
	no-loop
	salience 100
  	activation-group "QU"
	when
		( handle: R5RulesBean( menuLevel1Selected == "SA_OUS", menuLevel2Selected == "DATA_AXA" )) 
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("40808");
		transferRulesState.setQualificationResult("7301");
end

rule "ID0809"
	no-loop
	salience 100
  	activation-group "QU"
	when
		( handle: R5RulesBean( menuLevel1Selected == "SA_OUS", menuLevel2Selected == "MSS" )) 
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("40809");
		transferRulesState.setQualificationResult("7201");
end


rule "ID0810"
	no-loop
	salience 0
  	activation-group "QU"
	when
		( handle: R5RulesBean( menuLevel1Selected == "ORDER" )) 
		callProfile: CallProfile( language == "g" )
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("40810");
		transferRulesState.setQualificationResult("7031");
end

rule "ID0811"
	no-loop
	salience 0
  	activation-group "QU"
	when
		( handle: R5RulesBean( menuLevel1Selected == "ORDER" )) 
		callProfile: CallProfile( language == "f" )
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("40811");
		transferRulesState.setQualificationResult("7032");
end

rule "ID0935"
	no-loop
	salience 0
  	activation-group "QU"
	when
		( handle: R5RulesBean( menuLevel1Selected == "ORDER" )) 
		callProfile: CallProfile( language == "i" )
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("40935");
		transferRulesState.setQualificationResult("7033");
end

rule "ID0936"
	no-loop
	salience 0
  	activation-group "QU"
	when
		( handle: R5RulesBean( menuLevel1Selected == "ORDER" )) 
		callProfile: CallProfile( language == "e" )
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("40936");
		transferRulesState.setQualificationResult("7031");
end

rule "ID1005"
	no-loop
	salience -100
  	activation-group "QU"
	when
		( handle: R5RulesBean( menuLevel1Selected == "error" )) 
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("41005");
		transferRulesState.setQualificationResult("7300");
end

rule "ID1006"
	no-loop
	salience -100
  	activation-group "QU"
	when
		( handle: R5RulesBean( menuLevel1Selected == "SA_OUS", menuLevel2Selected == "error" )) 
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("41006");
		transferRulesState.setQualificationResult("7300");
end

rule "ID1049"
	no-loop
	salience 100
  	activation-group "QU"
	when
		( handle: R5RulesBean( menuLevel1Selected == "SA_OUS", menuLevel2Selected == "MO" )) 
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("41049");
		transferRulesState.setQualificationResult("9591");
end

/*
 	ID 1025: CBU Portal, Fallback rule, Routing ID 7175
*/
rule "ID1025_FALLBACK"
	no-loop
	salience -1000
  	activation-group "QU"
	when
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("41025");
		transferRulesState.setQualificationResult("7175");
end

/*
  Assign the qualificationResult to the queueNames set
*/ 

rule "SET_RETURN_QUEUENAME"
  salience -10000
  when
    trs: TransferRulesState( qualificationResult != TransferRulesState.NOT_SET )
  then
    queueNames.add(trs.getQualificationResult());
end