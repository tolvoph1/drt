/*
 * (c)2014 Swisscom (Schweiz) AG
 *
 * @(#) $Id: vp5cbu-0800724011-transfer.drl 165 2014-01-17 10:59:37Z tolvoph1 $
 * $Author: tolvoph1 $
 * $Date: 2014-01-17 11:59:37 +0100 (Fri, 17 Jan 2014) $
 * $Revision: 165 $
 */
 
package com.nortel.ema.swisscom.bal.rules.cbu

import com.nortel.ema.swisscom.bal.vo.model.CustomerProfile;
import com.nortel.ema.swisscom.bal.vo.model.CustomerProducts;
import com.nortel.ema.swisscom.bal.vo.model.CustomerProductClusters;
import com.nortel.ema.swisscom.bal.vo.model.CallProfile;
import com.nortel.ema.swisscom.bal.vo.model.CallDetail;
import com.nortel.ema.swisscom.bal.rules.model.TransferRulesState;
import com.nortel.ema.swisscom.bal.rules.model.facts.R5RulesBean;
import java.util.Set;
import java.util.Date;

global Set queueNames;

/*
	Initialize Rules Bean and check for String values in passed
	parameters. Put those in "constants" attributes of the bean
*/
rule "Init"
	no-loop
	salience 20000
	when
		not (R5RulesBean(  ))
	then
		assert ( new R5RulesBean(), true );
end

// Rules to set the selection in the menus
rule "MenuLevel1Selected"
	no-loop
	salience 10000
	when
		callprofile: CallProfile ( )
		handle: R5RulesBean( menuLevel1Selected == R5RulesBean.EMPTY )			
	then
		handle.setMenuLevel1Selected((String)callprofile.get("cbu/vp5cbu-0800724011-menu-level1"));
end

rule "ID1065"
	no-loop
	when
		R5RulesBean( menuLevel1Selected == "SF" ) 
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("41065");
		transferRulesState.setQualificationResult("7006");
end

rule "ID1066"
	no-loop
	when
		R5RulesBean( menuLevel1Selected == "SA" ) 
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("41066");
		transferRulesState.setQualificationResult("7005");
end

rule "ID1067"
	no-loop
	when
		R5RulesBean( menuLevel1Selected == "error" ) 
		transferRulesState : TransferRulesState(qualificationResult == TransferRulesState.NOT_SET )
	then
		transferRulesState.setIdentificationResult("41067");
		transferRulesState.setQualificationResult("7005");
end

/*
  Assign the qualificationResult to the queueNames set
*/ 

rule "SET_RETURN_QUEUENAME"
  salience -10000
  when
    trs: TransferRulesState( qualificationResult != TransferRulesState.NOT_SET )
  then
    queueNames.add(trs.getQualificationResult());
end